{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/georgiosloulakis/Documents/instappfood_Project/components/Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUser, fetchUserPosts } from \"../redux/actions/index\";\nimport FeedScreen from \"./main/Feed\";\nimport ProfileScreen from \"./main/Profile\";\nvar Tab = createMaterialBottomTabNavigator();\n\nvar EmptyScreen = function EmptyScreen() {\n  return null;\n};\n\nexport var Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchUser();\n      this.props.fetchUserPosts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"Feed\",\n        labeled: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Feed\",\n        component: FeedScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n                size = _ref.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"home\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 25\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Add Info\",\n        component: EmptyScreen,\n        listeners: function listeners(_ref2) {\n          var navigation = _ref2.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Add\");\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n                size = _ref3.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"plus-box\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 25\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 20\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var color = _ref4.color,\n                size = _ref4.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"account-circle\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 25\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUser: fetchUser,\n    fetchUserPosts: fetchUserPosts\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main);","map":{"version":3,"sources":["/Users/georgiosloulakis/Documents/instappfood_Project/components/Main.js"],"names":["React","Component","createMaterialBottomTabNavigator","MaterialCommunityIcons","connect","bindActionCreators","fetchUser","fetchUserPosts","FeedScreen","ProfileScreen","Tab","EmptyScreen","Main","props","tabBarIcon","color","size","navigation","tabPress","event","preventDefault","navigate","mapStateToProps","store","currentUser","userState","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { View,Text } from 'react-native'\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\n\nimport {connect} from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport {fetchUser,fetchUserPosts} from '../redux/actions/index'\nimport FeedScreen from './main/Feed'\nimport ProfileScreen from './main/Profile'\n\nconst Tab = createMaterialBottomTabNavigator();\nconst EmptyScreen = () =>{\n    return(null)\n}\nexport class Main extends Component {\n    componentDidMount(){\n        this.props.fetchUser();\n        this.props.fetchUserPosts();\n    }\n    render() {\n        return (\n            <Tab.Navigator initialRouteName=\"Feed\" labeled={false}>\n                <Tab.Screen name=\"Feed\" component={FeedScreen} \n                options = {{\n                    tabBarIcon: ({color,size}) =>(\n                        <MaterialCommunityIcons name = \"home\" color = {color} size = {26}/>\n                    ),\n                }}/>\n\n                   <Tab.Screen name=\"Add Info\" component={EmptyScreen} \n                   listeners ={({navigation})=>\n                ({\n                    tabPress: event =>{\n                        event.preventDefault();\n                        navigation.navigate(\"Add\")\n                    }\n                })}\n                options = {{\n                    tabBarIcon: ({color,size}) =>(\n                        <MaterialCommunityIcons name = \"plus-box\" color = {color} size = {26}/>\n                    ),\n                }}/>\n\n                  <Tab.Screen name=\"Profile\" component={ProfileScreen} \n                options = {{\n                    tabBarIcon: ({color,size}) =>(\n                        <MaterialCommunityIcons name = \"account-circle\" color = {color} size = {26}/>\n                    ),\n                }}/>\n            </Tab.Navigator>\n        )\n    }\n}\n\nconst mapStateToProps = (store) =>({\n    currentUser : store.userState.currentUser\n})\nconst mapDispatchProps = (dispatch) => bindActionCreators({fetchUser,fetchUserPosts},dispatch)\nexport default connect(mapStateToProps,mapDispatchProps)(Main)"]},"metadata":{},"sourceType":"module"}