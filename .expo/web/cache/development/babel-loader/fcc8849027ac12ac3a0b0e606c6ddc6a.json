{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/georgiosloulakis/Documents/instappfood_Project/components/main/ShowInfo.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport PermissionsAndroid from \"react-native-web/dist/exports/PermissionsAndroid\";\nimport firebase from 'firebase';\n\nrequire('firebase/firestore');\n\nimport { connect } from 'react-redux';\nimport { UserInterfaceIdiom } from 'expo-constants';\n\nfunction ShowInfo(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      userPosts = _useState2[0],\n      setUserPosts = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  useEffect(function () {\n    var currentUser = props.currentUser,\n        posts = props.posts;\n\n    if (props.route.params.uid === firebase.auth().currentUser.uid) {\n      setUser(currentUser);\n      setUserPosts(posts);\n    } else {\n      firebase.firestore().collection(\"users\").doc(props.route.params.uid).get().then(function (snapshot) {\n        if (snapshot.exists) {\n          setUser(snapshot.data());\n          console.log(snapshot.data());\n        } else {\n          console.log('does not exist');\n        }\n      });\n      firebase.firestore().collection('posts').doc(props.route.params.uid).collection('userPosts').doc(props.route.params.postId).get().then(function (snapshot) {\n        setUserPosts(snapshot.data());\n        console.log(snapshot.data());\n      });\n    }\n  }, [props.route.params.postId, props.route.params.uid]);\n\n  if (user === null) {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return React.createElement(ScrollView, {\n    style: styles.scrollView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, React.createElement(StatusBar, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: userPosts.downloadURL\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.headerText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, userPosts.title, \" \")), React.createElement(View, {\n    style: styles.header2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.header2Text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 46\n    }\n  }, \"Posted by \", user.name)), React.createElement(View, {\n    style: styles.header3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.header3Text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 46\n    }\n  }, \" \\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\"))), React.createElement(View, {\n    style: styles.receipeContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"Ingredient\"), React.createElement(Text, {\n    style: styles.Products,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, userPosts.products), React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Method\"), React.createElement(Text, {\n    style: styles.Method,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, userPosts.instruction)));\n}\n\nvar styles = StyleSheet.create({\n  scrollView: {\n    marginHorizontal: 0,\n    marginBottom: 30\n  },\n  container: {\n    flex: 1,\n    height: 300,\n    backgroundColor: 'black'\n  },\n  image: {\n    width: null,\n    height: 300\n  },\n  header: {\n    width: '100%',\n    height: 90,\n    position: 'absolute',\n    top: 179,\n    left: 0,\n    backgroundColor: 'rgba(96,94,93,0.70)'\n  },\n  headerText: {\n    fontSize: 30,\n    color: 'white',\n    margin: 5,\n    fontFamily: 'GillSans-UltraBold',\n    fontWeight: 'bold'\n  },\n  header2: {\n    width: '100%',\n    height: 20,\n    alignContent: 'flex-end',\n    alignItems: 'flex-end',\n    position: 'absolute',\n    top: 240,\n    left: 0\n  },\n  header2Text: {\n    color: 'white',\n    padding: 3,\n    fontFamily: 'Chalkduster',\n    fontWeight: 'bold'\n  },\n  header3: {\n    width: '100%',\n    height: 20,\n    alignContent: 'flex-end',\n    alignItems: 'flex-end',\n    position: 'absolute',\n    top: 220,\n    left: 0\n  },\n  header3Text: {\n    color: 'rgba(255,253,166,0.70)',\n    padding: 3,\n    fontFamily: 'Chalkduster',\n    fontWeight: 'bold'\n  },\n  receipeContainer: {\n    marginHorizontal: 10,\n    marginTop: 20\n  },\n  Products: {\n    fontSize: 15,\n    fontWeight: '500',\n    fontFamily: 'Baskerville',\n    padding: 20\n  },\n  Method: {\n    fontSize: 15,\n    fontFamily: 'Baskerville',\n    textAlign: 'justify',\n    paddingTop: 5\n  },\n  title: {\n    fontSize: 20,\n    padding: 4,\n    fontFamily: 'AvenirNextCondensed-Heavy',\n    color: 'white',\n    backgroundColor: 'rgba(154, 154, 150, 0.72)'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    posts: store.userState.posts\n  };\n};\n\nexport default connect(mapStateToProps, null)(ShowInfo);","map":{"version":3,"sources":["/Users/georgiosloulakis/Documents/instappfood_Project/components/main/ShowInfo.js"],"names":["React","useState","useEffect","firebase","require","connect","UserInterfaceIdiom","ShowInfo","props","userPosts","setUserPosts","user","setUser","currentUser","posts","route","params","uid","auth","firestore","collection","doc","get","then","snapshot","exists","data","console","log","postId","styles","scrollView","container","image","uri","downloadURL","header","headerText","title","header2","header2Text","name","header3","header3Text","receipeContainer","Products","products","Method","instruction","StyleSheet","create","marginHorizontal","marginBottom","flex","height","backgroundColor","width","position","top","left","fontSize","color","margin","fontFamily","fontWeight","alignContent","alignItems","padding","marginTop","textAlign","paddingTop","mapStateToProps","store","userState"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;;;AAGA,OAAOC,QAAP,MAAqB,UAArB;;AACAC,OAAO,CAAC,oBAAD,CAAP;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,gBAAnC;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,kBAAkCP,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOQ,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAwBT,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOU,IAAP;AAAA,MAAaC,OAAb;;AAEAV,EAAAA,SAAS,CAAC,YAAI;AACV,QAAQW,WAAR,GAA+BL,KAA/B,CAAQK,WAAR;AAAA,QAAqBC,KAArB,GAA+BN,KAA/B,CAAqBM,KAArB;;AAEG,QAAIN,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBC,GAAnB,KAA2Bd,QAAQ,CAACe,IAAT,GAAgBL,WAAhB,CAA4BI,GAA3D,EAAgE;AAC/DL,MAAAA,OAAO,CAACC,WAAD,CAAP;AACAH,MAAAA,YAAY,CAACI,KAAD,CAAZ;AACH,KAHE,MAIE;AACDX,MAAAA,QAAQ,CAACgB,SAAT,GACKC,UADL,CACgB,OADhB,EAEKC,GAFL,CAESb,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBC,GAF5B,EAGKK,GAHL,GAIKC,IAJL,CAIU,UAACC,QAAD,EAAc;AAChB,YAAIA,QAAQ,CAACC,MAAb,EAAqB;AACjBb,UAAAA,OAAO,CAACY,QAAQ,CAACE,IAAT,EAAD,CAAP;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,IAAT,EAAZ;AACH,SAHD,MAIK;AACDC,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH;AACJ,OAZL;AAcAzB,MAAAA,QAAQ,CAACgB,SAAT,GACKC,UADL,CACgB,OADhB,EAEKC,GAFL,CAESb,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBC,GAF5B,EAGKG,UAHL,CAGgB,WAHhB,EAIKC,GAJL,CAISb,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBa,MAJ5B,EAKKP,GALL,GAMKC,IANL,CAMU,UAACC,QAAD,EAAc;AAChBd,QAAAA,YAAY,CAACc,QAAQ,CAACE,IAAT,EAAD,CAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,IAAT,EAAZ;AACP,OATD;AAWH;AACJ,GAlCQ,EAkCP,CAAClB,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBa,MAApB,EAA2BrB,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBC,GAA9C,CAlCO,CAAT;;AAoCA,MAAIN,IAAI,KAAK,IAAb,EAAmB;AACf,WAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAED,SACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEmB,MAAM,CAACC,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,MAAM,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,KAAK,EAAEF,MAAM,CAACG,KADlB;AAEI,IAAA,MAAM,EAAE;AAACC,MAAAA,GAAG,EAAEzB,SAAS,CAAC0B;AAAhB,KAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACO,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiC5B,SAAS,CAAC6B,KAA3C,MADJ,CALJ,EAQI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6B,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACU,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA4C7B,IAAI,CAAC8B,IAAjD,CAA7B,CARJ,EASI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACY,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6B,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACa,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yJAA7B,CATJ,CAFJ,EAaI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAACc,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEd,MAAM,CAACQ,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACe,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BpC,SAAS,CAACqC,QAAzC,CAFJ,EAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,MAAM,CAACQ,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACiB,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BtC,SAAS,CAACuC,WAAvC,CAJJ,CAbJ,CADJ;AAuBH;;AAED,IAAMlB,MAAM,GAAGmB,UAAU,CAACC,MAAX,CAAkB;AAC7BnB,EAAAA,UAAU,EAAE;AACRoB,IAAAA,gBAAgB,EAAE,CADV;AAERC,IAAAA,YAAY,EAAC;AAFL,GADiB;AAK3BpB,EAAAA,SAAS,EAAE;AACTqB,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,MAAM,EAAC,GAFE;AAGTC,IAAAA,eAAe,EAAE;AAHR,GALgB;AAU3BtB,EAAAA,KAAK,EAAC;AACFuB,IAAAA,KAAK,EAAC,IADJ;AAEFF,IAAAA,MAAM,EAAC;AAFL,GAVqB;AAc3BlB,EAAAA,MAAM,EAAC;AACLoB,IAAAA,KAAK,EAAE,MADF;AAELF,IAAAA,MAAM,EAAE,EAFH;AAGLG,IAAAA,QAAQ,EAAE,UAHL;AAILC,IAAAA,GAAG,EAAE,GAJA;AAKLC,IAAAA,IAAI,EAAE,CALD;AAMLJ,IAAAA,eAAe,EAAE;AANZ,GAdoB;AAsB3BlB,EAAAA,UAAU,EAAC;AACPuB,IAAAA,QAAQ,EAAC,EADF;AAEPC,IAAAA,KAAK,EAAC,OAFC;AAGPC,IAAAA,MAAM,EAAC,CAHA;AAIPC,IAAAA,UAAU,EAAC,oBAJJ;AAKPC,IAAAA,UAAU,EAAC;AALJ,GAtBgB;AA8B3BzB,EAAAA,OAAO,EAAC;AACNiB,IAAAA,KAAK,EAAE,MADD;AAENF,IAAAA,MAAM,EAAE,EAFF;AAGNW,IAAAA,YAAY,EAAC,UAHP;AAINC,IAAAA,UAAU,EAAC,UAJL;AAKNT,IAAAA,QAAQ,EAAE,UALJ;AAMNC,IAAAA,GAAG,EAAE,GANC;AAONC,IAAAA,IAAI,EAAE;AAPA,GA9BmB;AAuC3BnB,EAAAA,WAAW,EAAC;AACVqB,IAAAA,KAAK,EAAC,OADI;AAEVM,IAAAA,OAAO,EAAC,CAFE;AAGVJ,IAAAA,UAAU,EAAC,aAHD;AAIVC,IAAAA,UAAU,EAAC;AAJD,GAvCe;AA6C7BtB,EAAAA,OAAO,EAAC;AACJc,IAAAA,KAAK,EAAE,MADH;AAEJF,IAAAA,MAAM,EAAE,EAFJ;AAGJW,IAAAA,YAAY,EAAC,UAHT;AAIJC,IAAAA,UAAU,EAAC,UAJP;AAKJT,IAAAA,QAAQ,EAAE,UALN;AAMJC,IAAAA,GAAG,EAAE,GAND;AAOJC,IAAAA,IAAI,EAAE;AAPF,GA7CqB;AAsD3BhB,EAAAA,WAAW,EAAC;AACVkB,IAAAA,KAAK,EAAC,wBADI;AAEVM,IAAAA,OAAO,EAAC,CAFE;AAGVJ,IAAAA,UAAU,EAAC,aAHD;AAIVC,IAAAA,UAAU,EAAC;AAJD,GAtDe;AA4D7BpB,EAAAA,gBAAgB,EAAC;AACbO,IAAAA,gBAAgB,EAAE,EADL;AAEbiB,IAAAA,SAAS,EAAC;AAFG,GA5DY;AAgE7BvB,EAAAA,QAAQ,EAAC;AACLe,IAAAA,QAAQ,EAAC,EADJ;AAELI,IAAAA,UAAU,EAAC,KAFN;AAGLD,IAAAA,UAAU,EAAC,aAHN;AAILI,IAAAA,OAAO,EAAC;AAJH,GAhEoB;AAsE7BpB,EAAAA,MAAM,EAAC;AACHa,IAAAA,QAAQ,EAAC,EADN;AAEHG,IAAAA,UAAU,EAAC,aAFR;AAGHM,IAAAA,SAAS,EAAC,SAHP;AAIHC,IAAAA,UAAU,EAAC;AAJR,GAtEsB;AA4E7BhC,EAAAA,KAAK,EAAC;AACFsB,IAAAA,QAAQ,EAAC,EADP;AAEFO,IAAAA,OAAO,EAAC,CAFN;AAGFJ,IAAAA,UAAU,EAAC,2BAHT;AAIFF,IAAAA,KAAK,EAAC,OAJJ;AAKFN,IAAAA,eAAe,EAAC;AALd;AA5EuB,CAAlB,CAAf;;AAsFA,IAAMgB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAChC3D,IAAAA,WAAW,EAAE2D,KAAK,CAACC,SAAN,CAAgB5D,WADG;AAEhCC,IAAAA,KAAK,EAAE0D,KAAK,CAACC,SAAN,CAAgB3D;AAFS,GAAZ;AAAA,CAAxB;;AAIA,eAAeT,OAAO,CAACkE,eAAD,EAAkB,IAAlB,CAAP,CAA+BhE,QAA/B,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { StyleSheet, View, Text, Image, SafeAreaView, StatusBar,ScrollView, PermissionsAndroid } from 'react-native'\n\nimport firebase from 'firebase'\nrequire('firebase/firestore')\nimport { connect } from 'react-redux'\nimport { UserInterfaceIdiom } from 'expo-constants'\n\nfunction ShowInfo(props) {\n    const [userPosts, setUserPosts] = useState([]);\n    const [user, setUser] = useState(null);\n\n    useEffect(()=>{\n        const { currentUser, posts } = props;\n\n           if (props.route.params.uid === firebase.auth().currentUser.uid) {\n            setUser(currentUser)\n            setUserPosts(posts)\n        }\n        else {\n            firebase.firestore()\n                .collection(\"users\")\n                .doc(props.route.params.uid)\n                .get()\n                .then((snapshot) => {\n                    if (snapshot.exists) {\n                        setUser(snapshot.data());\n                        console.log(snapshot.data())\n                    }\n                    else {\n                        console.log('does not exist')\n                    }\n                })\n          \n            firebase.firestore()\n                .collection('posts')\n                .doc(props.route.params.uid)\n                .collection('userPosts')\n                .doc(props.route.params.postId)\n                .get()\n                .then((snapshot) => {\n                    setUserPosts(snapshot.data());\n                    console.log(snapshot.data())\n            })\n            \n        }\n    },[props.route.params.postId,props.route.params.uid])\n\n    if (user === null) {\n        return <View />\n    }\n\n    return (\n        <ScrollView style={styles.scrollView}>\n            <StatusBar hidden />\n            <View style={styles.container}>\n                <Image\n                    style={styles.image}\n                    source={{uri: userPosts.downloadURL}}\n                />\n                <View style={styles.header}>\n                    <Text style={styles.headerText}>{userPosts.title} </Text>\n                </View>\n                <View style={styles.header2}><Text style={styles.header2Text}>Posted by {user.name}</Text></View>\n                <View style={styles.header3}><Text style={styles.header3Text}> ────────────────────────</Text></View>\n            </View>\n            <View style={styles.receipeContainer}>\n                <Text style={styles.title}>Ingredient</Text>\n                <Text style={styles.Products}>{userPosts.products}</Text>\n                <Text style={styles.title}>Method</Text>\n                <Text style={styles.Method}>{userPosts.instruction}</Text>\n            </View>\n        </ScrollView>\n        \n    )\n}\n\nconst styles = StyleSheet.create({\n    scrollView: {\n        marginHorizontal: 0,\n        marginBottom:30\n      },\n      container: {\n        flex: 1,\n        height:300,\n        backgroundColor: 'black',\n      },\n      image:{\n          width:null,\n          height:300\n      },\n      header:{\n        width: '100%',\n        height: 90,\n        position: 'absolute',\n        top: 179,\n        left: 0,\n        backgroundColor: 'rgba(96,94,93,0.70)',\n      },\n      headerText:{\n          fontSize:30,\n          color:'white',\n          margin:5,\n          fontFamily:'GillSans-UltraBold',\n          fontWeight:'bold'\n\n      },\n      header2:{\n        width: '100%',\n        height: 20,\n        alignContent:'flex-end',\n        alignItems:'flex-end',\n        position: 'absolute',\n        top: 240,\n        left: 0,\n      },\n      header2Text:{\n        color:'white',\n        padding:3,\n        fontFamily:'Chalkduster',\n        fontWeight:'bold'\n    },\n    header3:{\n        width: '100%',\n        height: 20,\n        alignContent:'flex-end',\n        alignItems:'flex-end',\n        position: 'absolute',\n        top: 220,\n        left: 0,\n      },\n      header3Text:{\n        color:'rgba(255,253,166,0.70)',\n        padding:3,\n        fontFamily:'Chalkduster',\n        fontWeight:'bold'\n    },\n    receipeContainer:{\n        marginHorizontal: 10,\n        marginTop:20,\n    },\n    Products:{\n        fontSize:15,\n        fontWeight:'500',\n        fontFamily:'Baskerville',\n        padding:20\n    },\n    Method:{\n        fontSize:15,\n        fontFamily:'Baskerville',\n        textAlign:'justify',\n        paddingTop:5\n    },\n    title:{\n        fontSize:20,\n        padding:4,\n        fontFamily:'AvenirNextCondensed-Heavy',\n        color:'white',\n        backgroundColor:'rgba(154, 154, 150, 0.72)'\n    }\n \n\n})\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser,\n    posts: store.userState.posts,\n})\nexport default connect(mapStateToProps, null)(ShowInfo);"]},"metadata":{},"sourceType":"module"}