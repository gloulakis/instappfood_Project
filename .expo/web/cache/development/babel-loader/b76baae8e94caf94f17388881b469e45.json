{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/georgiosloulakis/Documents/instappfood_Project/components/main/Save.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport firebase from 'firebase';\n\nrequire(\"firebase/firestore\");\n\nrequire(\"firebase/firebase-storage\");\n\nexport default function Save(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      products = _useState4[0],\n      setProducts = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      instruction = _useState6[0],\n      setInstruction = _useState6[1];\n\n  var uploadImage = function uploadImage() {\n    var uri, childPath, response, blob, task, taskProgress, taskCompleted, taskError;\n    return _regeneratorRuntime.async(function uploadImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            uri = props.route.params.image;\n            childPath = \"post/\" + firebase.auth().currentUser.uid + \"/\" + Math.random().toString(36);\n            console.log(childPath);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 5:\n            response = _context.sent;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 8:\n            blob = _context.sent;\n            task = firebase.storage().ref().child(childPath).put(blob);\n\n            taskProgress = function taskProgress(snapshot) {\n              console.log(\"transferred: \" + snapshot.bytesTransferred);\n            };\n\n            taskCompleted = function taskCompleted() {\n              task.snapshot.ref.getDownloadURL().then(function (snapshot) {\n                savePostData(snapshot);\n                console.log(snapshot);\n              });\n            };\n\n            taskError = function taskError(snapshot) {\n              console.log(snapshot);\n            };\n\n            task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var savePostData = function savePostData(downloadURL) {\n    firebase.firestore().collection('posts').doc(firebase.auth().currentUser.uid).collection(\"userPosts\").add({\n      downloadURL: downloadURL,\n      title: title,\n      products: products,\n      instruction: instruction,\n      likesCount: 0,\n      creation: firebase.firestore.FieldValue.serverTimestamp()\n    }).then(function () {\n      props.navigation.popToTop();\n    });\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: styles.SavePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.Page,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    style: styles.ShareButton,\n    title: \"Share\",\n    onPress: function onPress() {\n      return uploadImage();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputTitle,\n    placeholder: \"Title\",\n    onChangeText: function onChangeText(title) {\n      return setTitle(title);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 22\n    }\n  }), React.createElement(TextInput, {\n    style: styles.multiline,\n    placeholder: \"Products\",\n    multiline: true,\n    numberOfLines: 3,\n    placeholder: \"Ingredients\",\n    underlineColorAndroid: \"transparent\",\n    require: true,\n    onChangeText: function onChangeText(products) {\n      return setProducts(products);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    style: styles.multiline,\n    placeholder: \"Instruction\",\n    multiline: true,\n    numberOfLines: 3,\n    placeholder: \"Method\",\n    underlineColorAndroid: \"transparent\",\n    require: true,\n    onChangeText: function onChangeText(instruction) {\n      return setInstruction(instruction);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  inputTitle: {\n    height: '10%',\n    width: '100%',\n    margin: 1,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    shadowOpacity: 0.08,\n    fontWeight: 'bold',\n    padding: 10\n  },\n  multiline: {\n    height: '37%',\n    width: '100%',\n    borderRadius: 20,\n    backgroundColor: 'white',\n    textAlign: 'justify',\n    shadowOpacity: 0.08,\n    padding: 20,\n    margin: 10\n  },\n  SavePage: {\n    margin: 10,\n    marginTop: 30\n  },\n  Page: {\n    paddingBottom: '1%',\n    margin: '4%',\n    alignContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/georgiosloulakis/Documents/instappfood_Project/components/main/Save.js"],"names":["React","useState","firebase","require","Save","props","title","setTitle","products","setProducts","instruction","setInstruction","uploadImage","uri","route","params","image","childPath","auth","currentUser","uid","Math","random","toString","console","log","fetch","response","blob","task","storage","ref","child","put","taskProgress","snapshot","bytesTransferred","taskCompleted","getDownloadURL","then","savePostData","taskError","on","downloadURL","firestore","collection","doc","add","likesCount","creation","FieldValue","serverTimestamp","navigation","popToTop","styles","SavePage","Page","ShareButton","inputTitle","multiline","StyleSheet","create","height","width","margin","backgroundColor","borderRadius","shadowOpacity","fontWeight","padding","textAlign","marginTop","paddingBottom","alignContent","alignItems"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { View, TextInput, Button, StyleSheet,KeyboardAvoidingView } from 'react-native'\nimport firebase from 'firebase'\n\nrequire(\"firebase/firestore\")\nrequire(\"firebase/firebase-storage\")\n\n\nexport default function Save(props) {\n    const [title, setTitle] = useState(\"\")\n    const [products, setProducts] = useState(\"\")\n    const [instruction, setInstruction] = useState(\"\")\n\n    const uploadImage = async () => {\n        const uri = props.route.params.image;\n        const childPath = `post/${firebase.auth().currentUser.uid}/${Math.random().toString(36)}`;\n        console.log(childPath)\n\n        const response = await fetch(uri);\n        const blob = await response.blob();\n\n        const task = firebase\n            .storage()\n            .ref()\n            .child(childPath)\n            .put(blob);\n\n        const taskProgress = snapshot => {\n            console.log(`transferred: ${snapshot.bytesTransferred}`)\n        }\n\n        const taskCompleted = () => {\n            task.snapshot.ref.getDownloadURL().then((snapshot) => {\n                savePostData(snapshot);\n                console.log(snapshot)\n            })\n        }\n\n        const taskError = snapshot => {\n            console.log(snapshot)\n        }\n\n        task.on(\"state_changed\", taskProgress, taskError, taskCompleted);\n    }\n\n    const savePostData = (downloadURL) => {\n\n        firebase.firestore()\n            .collection('posts')\n            .doc(firebase.auth().currentUser.uid)\n            .collection(\"userPosts\")\n            .add({\n                downloadURL,\n                title,\n                products,\n                instruction,\n                likesCount: 0,\n                creation: firebase.firestore.FieldValue.serverTimestamp()\n            }).then((function () {\n                props.navigation.popToTop()\n            }))\n    }\n    return (\n        <KeyboardAvoidingView style={styles.SavePage} >\n            <View style={styles.Page}>\n            <Button  style={styles.ShareButton} title=\"Share\" onPress={() => uploadImage()} />\n                     <TextInput\n                        style={styles.inputTitle}\n                        placeholder={\"Title\"}\n                        onChangeText={(title) => setTitle(title)}\n                    />\n                    <TextInput\n                        style={styles.multiline}\n                        placeholder=\"Products\"\n                        multiline={true}\n                        numberOfLines={3}\n                        placeholder=\"Ingredients\"\n                        underlineColorAndroid='transparent'\n                        require={true}\n                        onChangeText={(products) => setProducts(products)}\n                    />\n                    <TextInput\n                        style={styles.multiline}\n                        placeholder=\"Instruction\"\n                        multiline={true}\n                        numberOfLines={3}\n                        placeholder=\"Method\"\n                        underlineColorAndroid='transparent'\n                        require={true}\n                        onChangeText={(instruction) => setInstruction(instruction)}\n                    /> \n            </View>\n        </KeyboardAvoidingView>\n    )\n}\nconst styles = StyleSheet.create({\n    inputTitle: {\n      height: '10%',\n      width:'100%',\n      margin: 1,\n      backgroundColor:'white',\n      borderRadius:20,\n      shadowOpacity:0.08,\n      fontWeight:'bold',\n      padding: 10,\n    },\n    multiline: {\n        height: '37%',\n        width:'100%',\n        borderRadius:20,\n        backgroundColor:'white',\n        textAlign:'justify',\n        shadowOpacity:0.08,\n        padding: 20,\n        margin:10\n    },\n    SavePage:{\n        margin:10,\n        marginTop:30\n    },\n    Page:{\n        paddingBottom:'1%',\n        margin:'4%',\n        alignContent:'center',\n        alignItems:'center',\n    }\n  });\n"]},"metadata":{},"sourceType":"module"}