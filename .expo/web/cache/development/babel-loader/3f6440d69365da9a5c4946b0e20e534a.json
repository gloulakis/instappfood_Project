{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/georgiosloulakis/Documents/instappfood_Project/components/auth/Register.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport firebase from 'firebase';\nimport { Input } from 'react-native-elements';\nexport var Register = function (_Component) {\n  _inherits(Register, _Component);\n\n  var _super = _createSuper(Register);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      email: '',\n      password: '',\n      name: '',\n      bio: ''\n    };\n    _this.onSignUp = _this.onSignUp.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"onSignUp\",\n    value: function onSignUp() {\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          name = _this$state.name,\n          bio = _this$state.bio;\n      firebase.auth().createUserWithEmailAndPassword(email, password).then(function (result) {\n        firebase.firestore().collection(\"users\").doc(firebase.auth().currentUser.uid).set({\n          name: name,\n          bio: bio,\n          email: email\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          width: '100%',\n          height: '100%',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, React.createElement(ImageBackground, {\n        source: require(\"../Images/bakc2.jpg\"),\n        resizeMode: \"cover\",\n        style: {\n          justifyContent: 'center',\n          width: '100%',\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 18\n        }\n      }, React.createElement(KeyboardAvoidingView, {\n        style: {\n          width: '100%',\n          backgroundColor: 'white',\n          borderRadius: '50%',\n          marginBottom: '50%',\n          alignContent: 'center',\n          alignItems: 'center'\n        },\n        behavior: \"height\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, React.createElement(Input, {\n        placeholder: \"Username\",\n        placeholderTextColor: \"#088F8F\",\n        color: \"black\",\n        opacity: \".5\",\n        padding: \"1%\",\n        marginTop: \"12%\",\n        onChangeText: function onChangeText(name) {\n          return _this2.setState({\n            name: name\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Bio\",\n        placeholderTextColor: \"#088F8F\",\n        color: \"black\",\n        opacity: \".5\",\n        padding: \"1%\",\n        marginTop: \"12%\",\n        multiline: true,\n        numberOfLines: 5,\n        require: true,\n        style: {\n          width: '96%',\n          margin: 8,\n          color: 'white',\n          alignContent: 'center',\n          alignItems: 'center',\n          fontSize: 20,\n          height: '15%',\n          borderWidth: 0.2,\n          borderColor: 'black',\n          padding: 4\n        },\n        onChangeText: function onChangeText(bio) {\n          return _this2.setState({\n            bio: bio\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }), React.createElement(Input, {\n        placeholder: \"E-Mail address\",\n        placeholderTextColor: \"#088F8F\",\n        color: \"black\",\n        opacity: \".5\",\n        padding: \"1%\",\n        marginTop: \"12%\",\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }\n      }), React.createElement(Input, {\n        placeholderTextColor: \"#088F8F\",\n        color: \"black\",\n        opacity: \".5\",\n        padding: \"1%\",\n        marginTop: \"12%\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: {\n          marginTop: '10%',\n          backgroundColor: 'rgba(0, 181, 204, 1)',\n          shadowColor: 'pink',\n          shadowOpacity: .3,\n          borderTopLeftRadius: '0',\n          borderTopRightRadius: '30',\n          borderBottomLeftRadius: '30',\n          borderBottomRightRadius: '30',\n          padding: 6,\n          marginBottom: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 22\n        }\n      }, React.createElement(Button, {\n        onPress: function onPress() {\n          return _this2.onSignUp();\n        },\n        title: \"Sign Up\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 34\n        }\n      })))));\n    }\n  }]);\n\n  return Register;\n}(Component);\nexport default Register;","map":{"version":3,"sources":["/Users/georgiosloulakis/Documents/instappfood_Project/components/auth/Register.js"],"names":["React","Component","firebase","Input","Register","props","state","email","password","name","bio","onSignUp","bind","auth","createUserWithEmailAndPassword","then","result","firestore","collection","doc","currentUser","uid","set","catch","error","console","log","flex","width","height","alignItems","require","justifyContent","backgroundColor","borderRadius","marginBottom","alignContent","setState","margin","color","fontSize","borderWidth","borderColor","padding","marginTop","shadowColor","shadowOpacity","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {View,Button,TextInput,KeyboardAvoidingView,ImageBackground} from 'react-native'\nimport firebase from 'firebase';\nimport { Input} from 'react-native-elements';\n\nexport class Register extends Component {\n\n    constructor(props) {\n        \n        super(props);\n\n        this.state = {\n            email: '',\n            password: '',\n            name: '',\n            bio: '',\n\n        }\n \n        this.onSignUp = this.onSignUp.bind(this)\n    }\n\n    onSignUp() {\n        const { email, password, name,bio } = this.state;\n        firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then((result) => {\n                firebase.firestore().collection(\"users\")\n                    .doc(firebase.auth().currentUser.uid)\n                    .set({\n                        name,\n                        bio,\n                        email\n                    })\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    }\n    \n\n    render() {\n        return (\n            <View style={{ \n                flex: 1,\n                width:'100%',\n                height:'100%', \n                alignItems: 'center'\n                }}>\n                 <ImageBackground source={require('../Images/bakc2.jpg')} resizeMode='cover' \n                    style={{justifyContent:'center',width:'100%',height:'100%'}}>\n                <KeyboardAvoidingView  style={{\n                    width:'100%',\n                    backgroundColor:'white',\n                    borderRadius:'50%',\n                    marginBottom:'50%',\n                    alignContent:'center',\n                    alignItems:'center',\n                    }}\n                    behavior='height'\n                    >\n              \n                    <Input\n                        placeholder=\"Username\"\n                        placeholderTextColor ='#088F8F'\n                        color='black'\n                        opacity ='.5'\n                        padding='1%'\n                        marginTop='12%'\n                        onChangeText={(name) => this.setState({ name })}\n                    />\n                    <TextInput\n                            placeholder=\"Bio\"\n                            placeholderTextColor ='#088F8F'\n                                        color='black'\n                                        opacity ='.5'\n                                        padding='1%'\n                                        marginTop='12%'\n                            multiline={true}\n                            numberOfLines={5}\n                            require={true}\n                            style={{\n                                width:'96%',\n                                margin:8,\n                                color:'white',\n                                alignContent:'center',\n                                alignItems:'center',\n                                fontSize:20,\n                                height: '15%',\n                                borderWidth:0.2,\n                                borderColor:'black',\n                                padding:4\n                            \n                            }}\n                            onChangeText={(bio) => this.setState({ bio })}\n                        />         \n                    <Input\n                        placeholder=\"E-Mail address\"\n                        placeholderTextColor ='#088F8F'\n                        color='black'\n                        opacity ='.5'\n                        padding='1%'\n                        marginTop='12%'\n                        onChangeText={(email) => this.setState({ email })}\n                    />\n                    <Input\n                         placeholderTextColor ='#088F8F'\n                         color='black'\n                         opacity ='.5'\n                         padding='1%'\n                         marginTop='12%'\n                        secureTextEntry={true}\n                        onChangeText={(password) => this.setState({ password })}\n                    />\n                     <View style={{\n                              marginTop: '10%',\n                              backgroundColor:'rgba(0, 181, 204, 1)',\n                              shadowColor:'pink',\n                              shadowOpacity:.3,\n                              borderTopLeftRadius:'0',\n                              borderTopRightRadius:'30',\n                              borderBottomLeftRadius:'30',\n                              borderBottomRightRadius:'30',\n                              padding:6,\n                              marginBottom:30\n                             }}>\n                                 <Button\n                                     onPress={() => this.onSignUp()}\n                                    title=\"Sign Up\"\n                                />\n                             </View>\n                    \n                </KeyboardAvoidingView>\n                                        \n                </ImageBackground>\n            </View>\n        )\n    }\n}\n\nexport default Register\n\n\n"]},"metadata":{},"sourceType":"module"}