{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/georgiosloulakis/Documents/instappfood_Project/components/main/Search.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { SafeAreaProvider, SafeAreaView } from 'react-native-safe-area-context';\nimport firebase from 'firebase';\n\nrequire('firebase/firestore');\n\nimport { BlackLogo } from \"../main/BlackLogo\";\nexport default function Search(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  var fetchUsers = function fetchUsers(search) {\n    return _regeneratorRuntime.async(function fetchUsers$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(firebase.firestore().collection('users').where('name', '>=', search).get().then(function (snapshot) {\n              var users = snapshot.docs.map(function (doc) {\n                var data = doc.data();\n                var id = doc.id;\n                return _objectSpread({\n                  id: id\n                }, data);\n              });\n              setUsers(users);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: styles.Screen,\n    behavior: \"height\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(BlackLogo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), React.createElement(FlatList, {\n    numColumns: 1,\n    horizontal: false,\n    data: users,\n    style: styles.List,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        style: styles.userProfile,\n        onPress: function onPress() {\n          return props.navigation.navigate(\"Profile\", {\n            uid: item.id\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.rowContainer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 22\n        }\n      }, React.createElement(Image, {\n        source: require(\"../Images/user.gif\"),\n        style: {\n          width: 30,\n          height: 30,\n          borderRadius: 40,\n          alignContent: 'center',\n          alignItems: 'center'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }\n      }), React.createElement(Text, {\n        style: {\n          padding: 5,\n          fontWeight: '800',\n          color: 'white'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      }, item.name)));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.Search,\n    placeholder: \"Search\",\n    onChangeText: function onChangeText(search) {\n      return fetchUsers(search);\n    },\n    leftIcon: {\n      type: 'font-awesome',\n      name: 'search'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  Search: {\n    width: 300,\n    textAlign: 'center',\n    color: 'black',\n    fontWeight: '700',\n    height: 50,\n    marginBottom: '7%',\n    borderRadius: 50,\n    borderColor: 'rgba(34, 49, 63, 1)',\n    borderWidth: 3,\n    backgroundColor: 'white'\n  },\n  Screen: {\n    flex: 1,\n    marginTop: '6%',\n    alignItems: 'center',\n    alignContent: 'center',\n    backgroundColor: 'white'\n  },\n  List: {\n    width: '100%',\n    alignContent: 'center',\n    backgroundColor: 'white'\n  },\n  userProfile: {\n    flex: 1,\n    marginTop: 30,\n    backgroundColor: '#508FCC',\n    height: 50\n  },\n  rowContainer: {\n    flexDirection: 'row',\n    alignItems: 'stretch',\n    padding: '2%'\n  }\n});","map":{"version":3,"sources":["/Users/georgiosloulakis/Documents/instappfood_Project/components/main/Search.js"],"names":["React","useState","SafeAreaProvider","SafeAreaView","firebase","require","BlackLogo","Search","props","users","setUsers","fetchUsers","search","firestore","collection","where","get","then","snapshot","docs","map","doc","data","id","styles","Screen","List","item","userProfile","navigation","navigate","uid","rowContainer","width","height","borderRadius","alignContent","alignItems","padding","fontWeight","color","name","type","StyleSheet","create","textAlign","marginBottom","borderColor","borderWidth","backgroundColor","flex","marginTop","flexDirection"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { View,Image, Text,KeyboardAvoidingView,StyleSheet, TextInput, FlatList, TouchableOpacity } from 'react-native'\nimport { SafeAreaProvider, SafeAreaView } from 'react-native-safe-area-context'\nimport firebase from 'firebase';\nrequire('firebase/firestore');\nimport {BlackLogo} from '../main/BlackLogo'\n\nexport default function Search(props) {\n    const [users, setUsers] = useState([])\n\n    const fetchUsers = async (search) => {\n        await firebase.firestore()\n            .collection('users')\n            .where('name', '>=', search)\n            .get()\n            .then((snapshot) => {\n                let users = snapshot.docs.map(doc => {\n                    const data = doc.data();\n                    const id = doc.id;\n                    return { id, ...data }\n                });\n                setUsers(users);\n            })\n    }\n    return (\n        <KeyboardAvoidingView style={styles.Screen} behavior=\"height\">\n            <BlackLogo/>\n            <FlatList\n                numColumns={1}\n                horizontal={false}\n                data={users}\n                style={styles.List} \n                renderItem={({ item }) => (\n                    <TouchableOpacity\n                        style={styles.userProfile}\n                        onPress={() => props.navigation.navigate(\"Profile\", {uid: item.id})}>\n                     <View style={styles.rowContainer}>\n                        <Image \n                            source={require('../Images/user.gif')}  \n                            style={{\n                                width:30, \n                                height:30,\n                                borderRadius:40,\n                                alignContent:'center',\n                                alignItems:'center',\n                                }}\n                        />\n                        <Text style={{padding:5,fontWeight:'800',color:'white'}}>{item.name}</Text> \n                     </View>\n                      \n                    </TouchableOpacity>\n                )}\n            />\n            <View>\n                <TextInput\n                    style={styles.Search}\n                    placeholder=\"Search\"\n                    onChangeText={(search) => fetchUsers(search)} \n                    leftIcon={{ type: 'font-awesome', name: 'search'}}/>\n            </View>\n        </KeyboardAvoidingView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    Search:{\n        width: 300,\n        textAlign:'center',\n        color:'black',\n        fontWeight:'700',\n        height: 50,\n        marginBottom:'7%',\n        borderRadius: 50,\n        borderColor:'rgba(34, 49, 63, 1)',\n        borderWidth:3,\n        backgroundColor:'white',\n      },\n      Screen:{\n        flex:1,\n        marginTop:'6%',\n        alignItems:'center',\n        alignContent:'center',\n        backgroundColor:'white'\n      },\n      List:{\n          width:'100%',\n          alignContent:'center',\n          backgroundColor:'white'\n      },\n      userProfile:{\n          flex:1,\n          marginTop:30,\n          backgroundColor:'#508FCC',\n          height:50,\n      },\n      rowContainer: {\n        flexDirection: 'row',\n        alignItems:'stretch',\n        padding: '2%'\n    },\n})"]},"metadata":{},"sourceType":"module"}