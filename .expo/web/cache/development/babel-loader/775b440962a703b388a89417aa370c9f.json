{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/georgiosloulakis/Documents/instappfood_Project/components/auth/Register.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport firebase from 'firebase';\nexport var Register = function (_Component) {\n  _inherits(Register, _Component);\n\n  var _super = _createSuper(Register);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _super.call(this, props);\n\n    _this.onSignUp = function (email, password) {\n      var name = _this.state.name;\n\n      try {\n        firebase.auth().createUserWithEmailAndPassword(email, password).then(function (result) {\n          firebase.firestore().collection(\"users\").doc(firebase.auth().currentUser.uid).set({\n            name: name,\n            email: email\n          });\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    _this.state = {\n      email: '',\n      password: '',\n      name: ''\n    };\n    _this.onSignUp = _this.onSignUp.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"Name\",\n        onChangeText: function onChangeText(name) {\n          return _this2.setState({\n            name: name\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"email\",\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 18\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 18\n        }\n      }), React.createElement(Button, {\n        onPress: function onPress() {\n          return _this2.onSignUp(_this2.state.email, _this2.state.password);\n        },\n        title: \"Sign Up\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Register;\n}(Component);\nexport default Register;","map":{"version":3,"sources":["/Users/georgiosloulakis/Documents/instappfood_Project/components/auth/Register.js"],"names":["React","Component","firebase","Register","props","onSignUp","email","password","name","state","auth","createUserWithEmailAndPassword","then","result","firestore","collection","doc","currentUser","uid","set","error","console","log","bind","setState"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,OAAOC,QAAP,MAAqB,UAArB;AAEA,WAAaC,QAAb;AAAA;;AAAA;;AACI,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8BAAMA,KAAN;;AADc,UAUlBC,QAVkB,GAUP,UAACC,KAAD,EAAQC,QAAR,EAAmB;AAC1B,UAAOC,IAAP,GAAe,MAAKC,KAApB,CAAOD,IAAP;;AACG,UAAG;AACCN,QAAAA,QAAQ,CAACQ,IAAT,GAAgBC,8BAAhB,CAA+CL,KAA/C,EAAqDC,QAArD,EACCK,IADD,CACO,UAACC,MAAD,EAAW;AAClBX,UAAAA,QAAQ,CAACY,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EACCC,GADD,CACKd,QAAQ,CAACQ,IAAT,GAAgBO,WAAhB,CAA4BC,GADjC,EAECC,GAFD,CAEK;AACDX,YAAAA,IAAI,EAAJA,IADC;AAEDF,YAAAA,KAAK,EAALA;AAFC,WAFL;AAMF,SARE;AASH,OAVD,CAUE,OAAOc,KAAP,EAAa;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AAEP,KA1BiB;;AAEd,UAAKX,KAAL,GAAY;AACRH,MAAAA,KAAK,EAAC,EADE;AAERC,MAAAA,QAAQ,EAAC,EAFD;AAGRC,MAAAA,IAAI,EAAC;AAHG,KAAZ;AAKA,UAAKH,QAAL,GAAgB,MAAKA,QAAL,CAAckB,IAAd,+BAAhB;AAPc;AAQjB;;AATL;AAAA;AAAA,WA6BI,kBAAS;AAAA;;AACL,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACI,QAAA,WAAW,EAAE,MADjB;AAEI,QAAA,YAAY,EAAE,sBAACf,IAAD;AAAA,iBAAU,MAAI,CAACgB,QAAL,CAAc;AAAEhB,YAAAA,IAAI,EAAJA;AAAF,WAAd,CAAV;AAAA,SAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAKK,oBAAC,SAAD;AACG,QAAA,WAAW,EAAE,OADhB;AAEG,QAAA,YAAY,EAAE,sBAACF,KAAD;AAAA,iBAAW,MAAI,CAACkB,QAAL,CAAc;AAAElB,YAAAA,KAAK,EAALA;AAAF,WAAd,CAAX;AAAA,SAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALL,EASK,oBAAC,SAAD;AACG,QAAA,WAAW,EAAE,UADhB;AAEG,QAAA,eAAe,EAAE,IAFpB;AAGG,QAAA,YAAY,EAAE,sBAACC,QAAD;AAAA,iBAAc,MAAI,CAACiB,QAAL,CAAc;AAAEjB,YAAAA,QAAQ,EAARA;AAAF,WAAd,CAAd;AAAA,SAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATL,EAcI,oBAAC,MAAD;AACI,QAAA,OAAO,EAAE;AAAA,iBAAK,MAAI,CAACF,QAAL,CAAc,MAAI,CAACI,KAAL,CAAWH,KAAzB,EAA+B,MAAI,CAACG,KAAL,CAAWF,QAA1C,CAAL;AAAA,SADb;AAEI,QAAA,KAAK,EAAC,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdJ,CADJ;AAqBH;AAnDL;;AAAA;AAAA,EAA8BN,SAA9B;AAsDA,eAAeE,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport {View,Button,TextInput} from 'react-native'\nimport firebase from 'firebase';\n\nexport class Register extends Component {\n    constructor(props){\n        super(props);\n        this.state= {\n            email:'',\n            password:'',\n            name:''\n        }\n        this.onSignUp = this.onSignUp.bind(this)\n    }\n\n    onSignUp = (email, password)=>{\n        const {name} = this.state\n           try{\n               firebase.auth().createUserWithEmailAndPassword(email,password)\n               .then ((result)=> {\n               firebase.firestore().collection(\"users\")\n               .doc(firebase.auth().currentUser.uid)\n               .set({\n                   name,\n                   email\n               })\n            })\n           } catch (error){\n               console.log(error);\n           }\n\n    }\n\n    render() {\n        return (\n            <View>\n                <TextInput\n                    placeholder= \"Name\"\n                    onChangeText={(name) => this.setState({ name })}\n                />\n                 <TextInput\n                    placeholder= \"email\"\n                    onChangeText={(email) => this.setState({ email })}\n                />\n                 <TextInput\n                    placeholder= \"password\"\n                    secureTextEntry={true}\n                    onChangeText={(password) => this.setState({ password })}\n                />\n                <Button\n                    onPress={()=> this.onSignUp(this.state.email,this.state.password)}\n                    title=\"Sign Up\"\n                />\n            </View>\n        )\n    }\n}\n\nexport default Register\n"]},"metadata":{},"sourceType":"module"}