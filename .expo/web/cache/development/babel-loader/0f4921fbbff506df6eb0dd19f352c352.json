{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/georgiosloulakis/Documents/instappfood_Project/components/Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport firebase from 'firebase';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUser, fetchUserPosts, fetchUserFollowing, clearData } from \"../redux/actions/index\";\nimport FeedScreen from \"./main/Feed\";\nimport ProfileScreen from \"./main/Profile\";\nimport SearchScreen from \"./main/Search\";\nimport LottieView from 'lottie-react-native';\nvar Tab = createMaterialBottomTabNavigator();\n\nvar EmptyScreen = function EmptyScreen() {\n  return null;\n};\n\nexport var Main = function (_Component) {\n  _inherits(Main, _Component);\n\n  var _super = _createSuper(Main);\n\n  function Main() {\n    _classCallCheck(this, Main);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.clearData();\n      this.props.fetchUser();\n      this.props.fetchUserPosts();\n      this.props.fetchUserFollowing();\n      this.animation.play();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"Feed\",\n        labeled: false,\n        shifting: true,\n        labeled: false,\n        sceneAnimationEnabled: false,\n        barStyle: {\n          marginBottom: 2,\n          backgroundColor: 'white',\n          shadowColor: 'black',\n          shadowOpacity: 200,\n          borderRadius: 100\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Feed\",\n        component: FeedScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color;\n            return React.createElement(LottieView, {\n              source: require(\"../assets/Lottie/BurgerProfile.json\"),\n              ref: function ref(animation) {\n                _this.animation = animation;\n              },\n              style: {\n                width: 60,\n                height: 60,\n                alignItems: 'flex-start',\n                backgroundColor: 'transparent'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 25\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Search\",\n        component: SearchScreen,\n        navigation: this.props.navigation,\n        options: {\n          headerShown: false,\n          tabBarIcon: function tabBarIcon() {\n            return React.createElement(Image, {\n              source: require(\"../assets/search.gif\"),\n              style: {\n                width: 60,\n                height: 60,\n                alignContent: 'center',\n                alignItems: 'center'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 29\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"AddContainer\",\n        component: EmptyScreen,\n        listeners: function listeners(_ref2) {\n          var navigation = _ref2.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Add\");\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon() {\n            return React.createElement(Image, {\n              source: require(\"../assets/receipe.gif\"),\n              style: {\n                width: 60,\n                height: 60,\n                alignContent: 'center',\n                alignItems: 'center'\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 29\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        listeners: function listeners(_ref3) {\n          var navigation = _ref3.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Profile\", {\n                uid: firebase.auth().currentUser.uid\n              });\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon() {\n            return React.createElement(Image, {\n              source: require(\"../assets/profile.gif\"),\n              style: {\n                width: 60,\n                height: 60\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 29\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 16\n        }\n      }));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUser: fetchUser,\n    fetchUserPosts: fetchUserPosts,\n    fetchUserFollowing: fetchUserFollowing,\n    clearData: clearData\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main);","map":{"version":3,"sources":["/Users/georgiosloulakis/Documents/instappfood_Project/components/Main.js"],"names":["React","Component","createMaterialBottomTabNavigator","MaterialCommunityIcons","firebase","connect","bindActionCreators","fetchUser","fetchUserPosts","fetchUserFollowing","clearData","FeedScreen","ProfileScreen","SearchScreen","LottieView","Tab","EmptyScreen","Main","props","animation","play","marginBottom","backgroundColor","shadowColor","shadowOpacity","borderRadius","tabBarIcon","color","require","width","height","alignItems","navigation","headerShown","alignContent","tabPress","event","preventDefault","navigate","uid","auth","currentUser","mapStateToProps","store","userState","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Image} from 'react-native'\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\n\nimport firebase from 'firebase'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { fetchUser, fetchUserPosts, fetchUserFollowing, clearData } from '../redux/actions/index'\n\nimport FeedScreen from './main/Feed'\nimport ProfileScreen from './main/Profile'\nimport SearchScreen from './main/Search'\n\nimport LottieView from 'lottie-react-native';\n\nconst Tab = createMaterialBottomTabNavigator();\n\nconst EmptyScreen = () => {\n    return (null)\n}\n\nexport class Main extends Component {\n    componentDidMount() {\n        this.props.clearData();\n        this.props.fetchUser();\n        this.props.fetchUserPosts();\n        this.props.fetchUserFollowing();\n        this.animation.play();\n    }\n    render() {\n        return (\n            <Tab.Navigator initialRouteName=\"Feed\" \n            labeled={false}\n            shifting={true}\n            labeled={false}\n            sceneAnimationEnabled={false}\n            barStyle={{\n                marginBottom:2,\n                backgroundColor:'white',\n                shadowColor:'black',\n                shadowOpacity:200,\n                borderRadius:100\n            }}\n            >\n                <Tab.Screen name=\"Feed\" component={FeedScreen}\n                      options={{\n                        tabBarIcon: ({ color }) => \n                        <LottieView\n                            source={require('../assets/Lottie/BurgerProfile.json')}\n                            ref={animation => {\n                                this.animation = animation;\n                              }}\n                              style={{\n                                width:60,\n                                height:60,\n                                alignItems:'flex-start',\n                                backgroundColor:'transparent'\n                              }}\n                            />\n                       }}\n                />\n\n                <Tab.Screen name=\"Search\" component={SearchScreen} navigation={this.props.navigation}\n                    options={{\n                        headerShown: false ,\n                        tabBarIcon: () => (\n                            <Image \n                                source={require('../assets/search.gif')}  \n                                style={{\n                                    width:60, \n                                    height:60,\n                                    alignContent:'center',\n                                    alignItems:'center',\n                                }}\n                            />\n                        ),\n                    }} />\n                <Tab.Screen name=\"AddContainer\" component={EmptyScreen}\n                    listeners={({ navigation }) => ({\n                        tabPress: event => {\n                            event.preventDefault();\n                            navigation.navigate(\"Add\")\n                        }\n                    })}\n                    options={{\n                        tabBarIcon: () => (\n                            <Image \n                                source={require('../assets/receipe.gif')}  \n                                style={{\n                                    width:60, \n                                    height:60,\n                                    alignContent:'center',\n                                    alignItems:'center'\n                                }}\n                            />\n                        ),\n                    }} />\n               <Tab.Screen name=\"Profile\" component={ProfileScreen} \n                listeners={({ navigation }) => ({\n                    tabPress: event => {\n                        event.preventDefault();\n                        navigation.navigate(\"Profile\", {uid: firebase.auth().currentUser.uid})\n                    }})}\n                    options={{\n                        tabBarIcon: () => (\n                            <Image \n                                source={require('../assets/profile.gif')}  \n                                style={{\n                                    width:60, \n                                    height:60,\n                                }}\n                            />\n                        ),\n                    }} />\n            </Tab.Navigator>\n        )\n    }\n}\n\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser\n})\nconst mapDispatchProps = (dispatch) => bindActionCreators({ fetchUser, fetchUserPosts, \n    fetchUserFollowing, clearData }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchProps)(Main);"]},"metadata":{},"sourceType":"module"}