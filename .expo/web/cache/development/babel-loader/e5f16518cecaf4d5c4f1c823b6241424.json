{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/georgiosloulakis/Documents/instappfood_Project/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { component } from 'react';\nimport firebase from 'firebase/app';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from \"./redux/reducers\";\nimport thunk from 'redux-thunk';\nvar store = createStore(rootReducer, applyMiddleware(thunk));\nimport LandingScreen from \"./components/auth/Landing\";\nimport RegisterScreen from \"./components/auth/Register\";\nimport MainScreen from \"./components/Main\";\nimport AddScreen from \"./components/main/Add\";\nimport SaveScreen from \"./components/main/Save\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDq9NKaC2mkb9dlBiAVlY_cVHiuBBucAXE\",\n  authDomain: \"instappfood.firebaseapp.com\",\n  projectId: \"instappfood\",\n  storageBucket: \"instappfood.appspot.com\",\n  messagingSenderId: \"492271644212\",\n  appId: \"1:492271644212:web:d58de0e3abab725d3b2461\",\n  measurementId: \"G-ZSER294L9P\"\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nvar Stack = createStackNavigator();\nexport var App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      loaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (!user) {\n          _this2.setState({\n            loggedIn: false,\n            loaded: true\n          });\n        } else {\n          _this2.setState({\n            loggedIn: true,\n            loaded: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loggedIn = _this$state.loggedIn,\n          loaded = _this$state.loaded;\n\n      if (!loaded) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }\n        }, \"Loading\"));\n      }\n\n      if (!loggedIn) {\n        return React.createElement(NavigationContainer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 9\n          }\n        }, React.createElement(Stack.Navigator, {\n          initialRouteName: \"Landing\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }\n        }, React.createElement(Stack.Screen, {\n          name: \"Landing\",\n          component: LandingScreen,\n          options: {\n            headerShown: false\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Register\",\n          component: RegisterScreen,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }\n        })));\n      }\n\n      return React.createElement(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }\n      }, React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, React.createElement(Stack.Navigator, {\n        initialRouteName: \"Main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Main\",\n        component: MainScreen,\n        options: {\n          headerShown: false\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Add\",\n        component: AddScreen,\n        navigation: this.props.navigation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Save\",\n        component: SaveScreen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\nexport default App;","map":{"version":3,"sources":["/Users/georgiosloulakis/Documents/instappfood_Project/App.js"],"names":["StatusBar","React","component","firebase","NavigationContainer","createStackNavigator","Component","Provider","createStore","applyMiddleware","rootReducer","thunk","store","LandingScreen","RegisterScreen","MainScreen","AddScreen","SaveScreen","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","Stack","App","props","state","loaded","auth","onAuthStateChanged","user","setState","loggedIn","flex","justifyContent","headerShown","navigation"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React,{component} from 'react';\nimport firebase from 'firebase/app';\nimport { View,Text } from 'react-native'\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Component } from 'react';\n\nimport { Provider } from 'react-redux';\nimport { createStore,applyMiddleware} from 'redux'\nimport rootReducer from './redux/reducers'\nimport thunk from 'redux-thunk'\nconst store = createStore(rootReducer,applyMiddleware(thunk))\n\nimport LandingScreen from './components/auth/Landing'\nimport RegisterScreen from './components/auth/Register'\nimport MainScreen from './components/Main'\nimport AddScreen from './components/main/Add'\nimport SaveScreen from './components/main/Save'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDq9NKaC2mkb9dlBiAVlY_cVHiuBBucAXE\",\n  authDomain: \"instappfood.firebaseapp.com\",\n  projectId: \"instappfood\",\n  storageBucket: \"instappfood.appspot.com\",\n  messagingSenderId: \"492271644212\",\n  appId: \"1:492271644212:web:d58de0e3abab725d3b2461\",\n  measurementId: \"G-ZSER294L9P\"\n};\n\nif (firebase.apps.length ===0) {\n  firebase.initializeApp(firebaseConfig);\n  }\n\n\n\nconst Stack = createStackNavigator();\n\nexport class App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      loaded:false,\n    }\n  }\n  componentDidMount(){\n    firebase.auth().onAuthStateChanged((user)=>{\n      if(!user){\n        this.setState({\n          loggedIn:false,\n          loaded:true,\n        })\n      }else{\n        this.setState({\n          loggedIn:true,\n          loaded:true,\n        })\n      }\n  })\n}\n  render() {\n    const {loggedIn,loaded} = this.state;\n  \n    if(!loaded){\n      return(\n        <View style={{flex:1 , justifyContent:'center'}}>\n          <Text>Loading</Text>\n          </View>\n      )\n    }\n    if(!loggedIn){\n      return (\n        <NavigationContainer>\n          <Stack.Navigator initialRouteName = \"Landing\">\n            <Stack.Screen name = \"Landing\" component = {LandingScreen} options ={{headerShown : false}}/>\n            <Stack.Screen name = \"Register\" component = {RegisterScreen}/>\n          </Stack.Navigator>\n        </NavigationContainer>\n       \n      );\n    }\n    return(\n      <Provider store={store}>\n        <NavigationContainer>\n          <Stack.Navigator initialRouteName=\"Main\">\n            <Stack.Screen name =\"Main\" component = { MainScreen} options = {{headerShown: false}}/>\n            <Stack.Screen name =\"Add\" component = { AddScreen} navigation={this.props.navigation}/>\n            <Stack.Screen name =\"Save\" component = { SaveScreen}/>\n          </Stack.Navigator>\n        </NavigationContainer>\n      </Provider>\n      \n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}